<!-- <div><%= @test_variable_1 %></div> -->
<!-- <div><%= @test_variable_2 %></div> -->
<!-- <div><%= @test_variable_3 %></div> -->
<!-- <div><%= @test_variable_4 %></div> -->
<!-- <div><%= @test_variable_5 %></div> -->
<!-- <div><%= @test_variable_6 %></div> -->

<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
}

form {
  display: block;
  margin-top: 2em;
}

svg {
  margin: 0 auto;
  max-width: 100%;
}

</style>

<div class='data-wrapper'>
  <div class='controls-container'>
    <div id='size' class='button violet'>Size</div>
    <div id='count' class='button red'>Count</div>
  </div>

  <div class='window'></div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
<script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>

<script>
var root = <%= @test_json_2 %>;

var width = 960,
    height = 700,
    radius = (Math.min(width, height) / 2) - 30,
    color = ['#B01CEE', '#1CC3EE', '#1CEEB0', '#F6A110', '#EE1C5A'];

var svg = d3.select(".data-wrapper").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height * .52 + ")");

var partition = d3.layout.partition()
    .sort(null)
    .size([2 * Math.PI, radius * radius])
    .value(function(d) { return 1; });

var arc = d3.svg.arc()
    .startAngle(function(d) { return d.x; })
    .endAngle(function(d) { return d.x + d.dx; })
    .innerRadius(function(d) { return Math.sqrt(d.y); })
    .outerRadius(function(d) { return Math.sqrt(d.y + d.dy); });

var path = svg.datum(root).selectAll("path")
  .data(partition.nodes)
  .enter().append("path")
  .attr("display", function(d) { return d.depth ? null : "none"; }) // hide inner ring
  .attr("d", arc)
  .style("stroke", "#fff")
  .style("fill", function(d) { return color[(d.children ? d : d.parent).index % color.length]; })
  .style("fill-rule", "evenodd")
  .each(stash);

path.append("svg:title").text(function(d) { return d.id ? d.name : "cluster"; })

function change(sizing) {
    var value = sizing === 'count'
        ? function() { return 1; }
        : function(d) { return d.size; };

    path
        .data(partition.value(value).nodes)
      .transition()
        .duration(1500)
        .attrTween("d", arcTween);
}

$('#size.button').click(function () {
  change('size');
});

$('#count.button').click(function () {
  change('count');
});

// Stash the old values for transition.
function stash(d) {
  d.x0 = d.x;
  d.dx0 = d.dx;
}

// Interpolate the arcs in data space.
function arcTween(a) {
  var i = d3.interpolate({x: a.x0, dx: a.dx0}, a);
  return function(t) {
    var b = i(t);
    a.x0 = b.x;
    a.dx0 = b.dx;
    return arc(b);
  };
}

d3.select(self.frameElement).style("height", height + "px");

</script>
